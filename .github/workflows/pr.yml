name: Bump Release Version

on:
  push:
    branches:
      - main

jobs:
  bump-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest release version
        id: get_latest_release
        run: |
          latest_release=$(gh release list --limit 1 --json tagName -q '.[0].tagName')
          echo "Latest release: $latest_release"
          echo "latest_release=${latest_release}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate next version
        id: calc_version
        run: |
          version=${{ steps.get_latest_release.outputs.latest_release }}
          # Remove 'v' prefix if present
          version=${version#v}
          IFS='.' read -r major minor patch <<< "$version"
          new_patch=$((patch + 1))
          new_version="v${major}.${minor}.${new_patch}"
          echo "Next version: $new_version"
          echo "new_version=${new_version}" >> $GITHUB_OUTPUT
          echo "package_version=${major}.${minor}.${new_patch}" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          package_version=${{ steps.calc_version.outputs.package_version }}
          echo "Updating package.json to version: $package_version"
          jq --arg version "$package_version" '.version = $version' package.json > temp.json && mv temp.json package.json
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add package.json
          git commit -m "chore: bump version to $package_version"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new release
        run: |
          gh release create ${{ steps.calc_version.outputs.new_version }} --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
